const curriculum = {
    8: {
        '–ê–Ω–≥–ª–∏–π—Å–∫–∏ –µ–∑–∏–∫': '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∏ –∏–∑–ø–∏—Ç–∏.'
    },
    9: {
    },
    10: {

    },
    11: {

    },
    12: {

    }
};

// –ò–∫–æ–Ω–∏ –∑–∞ —Ä–∞–∑–ª–∏—á–Ω–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç–∏
const subjectIcons = {
    
};

let currentGrade = null;
let isAnimating = false;

function showGrade(grade) {
    if (currentGrade === grade || isAnimating) return;
    isAnimating = true;
    
    const gradeTitle = document.getElementById('grade-title');
    const subjectsDiv = document.getElementById('subjects');
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞ –∏–∑—á–µ–∑–≤–∞–Ω–µ
    subjectsDiv.style.opacity = '0';
    subjectsDiv.style.transform = 'translateY(-20px)';
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞ –∑–∞–≥–ª–∞–≤–∏–µ—Ç–æ
    gradeTitle.classList.remove('animate');
    void gradeTitle.offsetWidth; // –§–æ—Ä—Å–∏—Ä–∞–º–µ reflow
    gradeTitle.classList.add('animate');
    
    setTimeout(() => {
        gradeTitle.textContent = `${grade} –∫–ª–∞—Å`;
        subjectsDiv.innerHTML = '';

        const subjects = curriculum[grade];
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –ø—Ä–∞–∑–Ω–∏ –¥–∞–Ω–Ω–∏
        if (!subjects || Object.keys(subjects).length === 0) {
            const emptyMessage = document.createElement('div');
            emptyMessage.className = 'empty-message';
            emptyMessage.textContent = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è—Ç–∞ –∑–∞ —Ç–æ–∑–∏ –∫–ª–∞—Å —Å–∫–æ—Ä–æ —â–µ –±—ä–¥–µ –¥–æ–±–∞–≤–µ–Ω–∞.';
            subjectsDiv.appendChild(emptyMessage);
            subjectsDiv.style.opacity = '1';
            subjectsDiv.style.transform = 'translateY(0)';
            isAnimating = false;
            return;
        }

        // –°—ä–∑–¥–∞–≤–∞–º–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞ –ø–æ–¥—Ä–µ–¥–±–∞
        const gridContainer = document.createElement('div');
        gridContainer.className = 'subjects-grid';
        subjectsDiv.appendChild(gridContainer);

        // –°–æ—Ä—Ç–∏—Ä–∞–º–µ –ø—Ä–µ–¥–º–µ—Ç–∏—Ç–µ –ø–æ –∞–∑–±—É—á–µ–Ω —Ä–µ–¥
        const sortedSubjects = Object.entries(subjects).sort((a, b) => a[0].localeCompare(b[0]));
        let delay = 0;

        for (const [subject, description] of sortedSubjects) {
            const subjectElement = document.createElement('div');
            subjectElement.className = 'subject';
            subjectElement.style.opacity = '0';
            subjectElement.style.transform = 'translateY(20px)';
            subjectElement.style.transition = 'all 0.4s cubic-bezier(0.4, 0, 0.2, 1)';
            subjectElement.style.transitionDelay = `${delay}s`;
            
            const icon = subjectIcons[subject] || 'üìñ';
            
            subjectElement.innerHTML = `
                <h3>
                    <span class="subject-icon">${icon}</span>
                    ${subject}
                </h3>
                <p>${description}</p>
            `;
            
            gridContainer.appendChild(subjectElement);
            delay += 0.1;
            
            // –§–æ—Ä—Å–∏—Ä–∞–º–µ reflow –∑–∞ –∞–Ω–∏–º–∞—Ü–∏—è—Ç–∞
            subjectElement.offsetHeight;
            
            setTimeout(() => {
                subjectElement.style.opacity = '1';
                subjectElement.style.transform = 'translateY(0)';
            }, 50);
        }
        
        // –ü–æ–∫–∞–∑–≤–∞–º–µ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ—Ç–æ —Å –∞–Ω–∏–º–∞—Ü–∏—è
        subjectsDiv.style.opacity = '1';
        subjectsDiv.style.transform = 'translateY(0)';
        
        setTimeout(() => {
            isAnimating = false;
        }, delay * 1000 + 500);
    }, 300);

    // –ê–∫—Ç–∏–≤–µ–Ω –±—É—Ç–æ–Ω —Å –ø–ª–∞–≤–Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—è
    document.querySelectorAll('.buttons button').forEach(btn => {
        btn.classList.remove('active');
        if (btn.textContent.includes(grade.toString())) {
            btn.classList.add('active');
        }
    });

    currentGrade = grade;
}

// –î–æ–±–∞–≤—è–º–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏—è
document.addEventListener('keydown', (e) => {
    if (currentGrade && !isAnimating) {
        if (e.key === 'ArrowRight' || e.key === 'ArrowUp') {
            const nextGrade = Math.min(currentGrade + 1, 12);
            if (nextGrade !== currentGrade) showGrade(nextGrade);
        } else if (e.key === 'ArrowLeft' || e.key === 'ArrowDown') {
            const prevGrade = Math.max(currentGrade - 1, 8);
            if (prevGrade !== currentGrade) showGrade(prevGrade);
        }
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ
document.addEventListener('DOMContentLoaded', () => {
    // –î–æ–±–∞–≤—è–º–µ –∫–ª–∞—Å –∑–∞ –∞–∫—Ç–∏–≤–µ–Ω –±—É—Ç–æ–Ω –ø—Ä–∏ –∫–ª–∏–∫
    document.querySelectorAll('.buttons button').forEach(button => {
        button.addEventListener('click', function() {
            if (!isAnimating) {
                const grade = parseInt(this.textContent);
                showGrade(grade);
            }
        });
    });

    // –ó–∞–¥–∞–≤–∞–º–µ –Ω–∞—á–∞–ª–Ω–æ —Å—ä—Å—Ç–æ—è–Ω–∏–µ
    const gradeTitle = document.getElementById('grade-title');
    const subjectsDiv = document.getElementById('subjects');
    
    gradeTitle.textContent = '–ò–∑–±–µ—Ä–µ—Ç–µ –∫–ª–∞—Å';
    gradeTitle.classList.add('initial');
    subjectsDiv.innerHTML = '';
    
    // –î–æ–±–∞–≤—è–º–µ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –Ω–∞—á–∞–ª–µ–Ω –∏–∑–±–æ—Ä
    const initialMessage = document.createElement('div');
    initialMessage.className = 'empty-message';
    initialMessage.innerHTML = `
        <i class="fas fa-hand-point-up" style="font-size: 2rem; margin-bottom: 15px; color: #1a73e8;"></i>
        <p>–ú–æ–ª—è, –∏–∑–±–µ—Ä–µ—Ç–µ –∫–ª–∞—Å –æ—Ç –±—É—Ç–æ–Ω–∏—Ç–µ –ø–æ-–≥–æ—Ä–µ, –∑–∞ –¥–∞ –≤–∏–¥–∏—Ç–µ —É—á–µ–±–Ω–∞—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–∞.</p>
    `;
    subjectsDiv.appendChild(initialMessage);
}); 